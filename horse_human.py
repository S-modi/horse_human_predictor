# -*- coding: utf-8 -*-
"""Horse_human.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RYnN4Q7Deof15baeBXe14ZGdLXyKkJc7
"""

from tensorflow.keras.layers import Input, Lambda, Dense, Flatten ,BatchNormalization,Dropout
from tensorflow.keras.models import Model
from tensorflow.keras.applications import MobileNet
#from keras.applications.vgg16 import VGG16
from tensorflow.keras.applications.resnet50 import preprocess_input
from tensorflow.keras.preprocessing import image
from tensorflow.keras.preprocessing.image import ImageDataGenerator,load_img
from tensorflow.keras.models import Sequential
from tensorflow.keras.regularizers import L2
import numpy as np
from glob import glob
import matplotlib.pyplot as plt

IMAGE_SIZE = [224, 224] # the image of art take size of [224,224] thats why we take here.

train_path = '/content/drive/MyDrive/horse_humans/horse-or-human/train'
valid_path = '/content/drive/MyDrive/horse_humans/horse-or-human/validation'

resnet = ResNet50(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)
Mobile = MobileNet(input_shape=IMAGE_SIZE + [3], weights='imagenet', include_top=False)

for layer in resnet.layers:
  layer.trainable=False



x=Flatten()(Mobile.output)
x = BatchNormalization()(x)
x = Dropout(0.5)(x)
x = Dense(32, activation='relu')(x)
x = Dense(32, activation='relu',kernel_regularizer=L2(0.01))(x)

folders=glob( '/content/drive/MyDrive/horse_humans/horse-or-human/train/*')

folders

prediction=Dense(len(folders),activation='softmax')(x)

prediction

model = Model(inputs=Mobile.input, outputs=prediction)

model.summary()

model.compile(
  loss='categorical_crossentropy',
  optimizer='adam',
  metrics=['accuracy']
)

from tensorflow.keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255,
                                   shear_range = 0.2,
                                   zoom_range = 0.2,
                                   horizontal_flip = True)

test_datagen = ImageDataGenerator(rescale = 1./255)


training_set = train_datagen.flow_from_directory('/content/drive/MyDrive/horse_humans/horse-or-human/train',
                                                 target_size = (224, 224),
                                                 batch_size = 32,
                                                 class_mode = 'categorical')

test_set = test_datagen.flow_from_directory('/content/drive/MyDrive/horse_humans/horse-or-human/validation',
                                            target_size = (224, 224),
                                            batch_size = 32,
                                            class_mode = 'categorical')

model.fit_generator(
  training_set,
  validation_data=test_set,
  epochs=10,
  steps_per_epoch=len(training_set),
  validation_steps=len(test_set)
)

from tensorflow.keras.models import load_model

model.save('model_mobile.h5')

